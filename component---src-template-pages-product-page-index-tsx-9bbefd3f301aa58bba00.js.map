{"version":3,"file":"component---src-template-pages-product-page-index-tsx-9bbefd3f301aa58bba00.js","mappings":"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","sources":["webpack://agt-guntrade-shop/./src/components/organisms/ContactModal/index.tsx","webpack://agt-guntrade-shop/./src/layout/BannerLayout/style.ts","webpack://agt-guntrade-shop/./src/layout/BannerLayout/index.tsx","webpack://agt-guntrade-shop/./src/services/wishlist/index.ts","webpack://agt-guntrade-shop/./src/layout/ProductSliderLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/ShopProductLayout/index.tsx","webpack://agt-guntrade-shop/./src/templatePages/ProductPage/index.tsx"],"sourcesContent":["import {Button, IconButton} from '@chakra-ui/button'\nimport {Image} from '@chakra-ui/image'\nimport {Input} from '@chakra-ui/input'\nimport {Text, Box, Heading, Flex} from '@chakra-ui/layout'\nimport {\n  Modal,\n  ModalContent,\n  ModalOverlay,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody\n} from '@chakra-ui/modal'\nimport {useToast} from '@chakra-ui/toast'\nimport {ScaleFade} from '@chakra-ui/transition'\nimport {IoIosCopy} from '@react-icons/all-files/io/IoIosCopy'\nimport {IoMdShareAlt} from '@react-icons/all-files/io/IoMdShareAlt'\nimport React from 'react'\nimport {FormControl, FormErrorMessage, FormLabel} from '@chakra-ui/form-control'\nimport {Checkbox} from '@chakra-ui/checkbox'\nimport {Select} from '@chakra-ui/select'\nimport {Textarea} from '@chakra-ui/textarea'\n\nimport * as style from './style'\nimport {useForm} from 'react-hook-form'\nimport {sendEmail} from '../../../services/mail'\n\nexport interface ContactModalProps {\n  isOpen: boolean\n  heading: React.ReactNode\n  text: React.ReactNode\n  onClose: Function\n  wishlist: {\n    title: string\n    quantity: number\n  }[]\n}\n\nexport const ContactModal = ({\n  isOpen,\n  heading,\n  text,\n  wishlist,\n  onClose\n}: ContactModalProps) => {\n  const toast = useToast()\n  const generateEmailContent = () => {\n    const wishlistText = wishlist\n      .map(item => {\n        return `- ${item.quantity} x ${item.title}`\n      })\n      .join('\\n')\n\n    const content = `Sehr geehrtes AGT Team,\nich würde gerne ein Kaufangebot für folgende Artikel einholen:\n\n${wishlistText}\n\n\nMit freundlichen Grüßen!\n    `\n\n    return content\n  }\n\n  const defaultValues = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    message: generateEmailContent(),\n    agbChecked: false\n  }\n\n  const {\n    handleSubmit,\n    reset,\n    register,\n    formState: {errors, isSubmitting}\n  } = useForm<typeof defaultValues>({\n    defaultValues\n  })\n\n  React.useEffect(() => {\n    reset(defaultValues)\n  }, [wishlist])\n\n  const onSubmit = async (data: typeof defaultValues) => {\n    const {firstName, lastName, email, message} = data\n\n    const subject = `Kaufanfrage für ${wishlist\n      .map(item => item.title)\n      .join(', ')}`\n\n    const body = `\nAnfrage von ${firstName} ${lastName} (${email}) über AGT Shop.\n\n<== Inhalt der Anfrage ==>\n\n${message}\n`\n\n    await sendEmail({\n      fromEmail: email,\n      name: `${firstName} ${lastName}`,\n      subject,\n      message: body\n    })\n\n    toast({\n      title: 'Anfrage erfolgreich versendet',\n      description:\n        'Vielen Dank für Ihre Anfrage. Wir werden uns so schnell wie möglich bei Ihnen melden.',\n      status: 'success',\n      duration: 9000,\n      isClosable: true\n    })\n\n    onClose()\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        onClose()\n      }}\n      isCentered\n      scrollBehavior=\"inside\">\n      <ModalOverlay />\n      <ModalContent\n        bg=\"gray.50\"\n        borderRadius=\"5px\"\n        minH=\"60vh\"\n        maxW={{base: '90vw', md: '64vw', xl: '60vw'}}>\n        <ModalHeader ml=\"5\" fontWeight={'bold'}>\n          {heading}\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody mx=\"5\" mb=\"5\">\n          <Text mb=\"3\">{text}</Text>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Flex mb=\"3\" direction={{base: 'column', md: 'row'}}>\n              <Box mr=\"5\" w={{base: '100%', md: '50%'}}>\n                <FormControl isInvalid={!!errors.firstName}>\n                  <FormLabel htmlFor=\"first-name\">Vorname</FormLabel>\n                  <Input\n                    bg=\"white\"\n                    placeholder=\"Max\"\n                    {...register('firstName', {required: true})}\n                    borderColor=\"#D4D4D9\"\n                  />\n                </FormControl>\n              </Box>\n              <Box w={{base: '100%', md: '50%'}}>\n                <FormControl isInvalid={!!errors.lastName}>\n                  <FormLabel htmlFor=\"last-name\">Nachname</FormLabel>\n                  <Input\n                    bg=\"white\"\n                    placeholder=\"Mustermann\"\n                    {...register('lastName', {required: true})}\n                    borderColor=\"#D4D4D9\"\n                  />\n                </FormControl>\n              </Box>\n            </Flex>\n\n            <Box mb=\"3\">\n              <FormControl isInvalid={!!errors.email}>\n                <FormLabel htmlFor=\"email\">Email Adresse</FormLabel>\n                <Input\n                  bg=\"white\"\n                  placeholder=\"max.mustermann@example.at\"\n                  {...register('email', {\n                    required: true,\n                    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\n                  })}\n                  borderColor=\"#D4D4D9\"\n                />\n              </FormControl>\n            </Box>\n            <Box mb=\"5\">\n              <FormControl isInvalid={!!errors.message}>\n                <FormLabel htmlFor=\"message\">Nachricht</FormLabel>\n                <Textarea\n                  bg=\"white\"\n                  resize=\"vertical\"\n                  borderColor=\"#D4D4D9\"\n                  h=\"30vh\"\n                  {...register('message', {required: true})}\n                />\n              </FormControl>\n            </Box>\n            <Box>\n              <FormControl isInvalid={!!errors.agbChecked}>\n                <Flex>\n                  <Checkbox\n                    {...register('agbChecked', {required: true})}\n                    borderColor=\"#D4D4D9\"\n                    bg=\"white\"\n                    h=\"fit-content\"\n                    mt=\"0.5\"\n                    mr=\"2\"\n                  />\n                  <Text mt={'-2px'}>\n                    Ich habe die AGBs gelesen und stimme der Verarbeitung meiner\n                    Daten zu.\n                  </Text>\n                </Flex>\n                {errors.agbChecked && (\n                  <FormErrorMessage>\n                    Bitte akzeptieren Sie die AGBs\n                  </FormErrorMessage>\n                )}\n              </FormControl>\n              <Button\n                mt=\"4\"\n                colorScheme=\"agt.grayScheme\"\n                type=\"submit\"\n                isLoading={isSubmitting}>\n                Absenden\n              </Button>\n            </Box>\n          </form>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ContactModal\n","import {Box} from '@chakra-ui/react'\nimport styled from '@emotion/styled'\n\nexport const Banner = styled(Box)`\n  .banner-image {\n    height: 200px;\n    width: 100%;\n    object-fit: cover;\n  }\n`\n","import {\n  Box,\n  Flex,\n  Heading\n} from '@chakra-ui/react'\nimport {GatsbyImage, IGatsbyImageData, StaticImage} from 'gatsby-plugin-image'\nimport {Breadcrumbs, ShopLayout} from '../ShopLayout'\n\nimport {GCImage, gridPadBoxes} from '../../common/utils'\nimport * as style from './style'\n\n\nexport interface BannerLayoutProps {\n  title: string\n  path: string\n}\n\nexport const BannerLayout = (props: BannerLayoutProps) => {\n  return (\n    <Box position={'relative'} color=\"white\">\n      <style.Banner>\n        <GCImage\n          gimg={\n            <StaticImage\n              src=\"https://i.imgur.com/8zG2Ymd.jpeg\"\n              alt=\"bg\"\n              imgClassName=\"banner-image\"\n            />\n          }\n        />\n      </style.Banner>\n      <Flex position={'absolute'} top=\"5\" w='100%' justifyContent={'center'} alignItems={'center'}>\n        <Box w=\"8xl\">\n          <Breadcrumbs path={props.path} />\n          <Heading size=\"2xl\" my=\"8\">\n            {props.title}\n          </Heading>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}","import {IGatsbyImageData} from 'gatsby-plugin-image'\nimport React from 'react'\n\nexport interface WishlistProduct {\n  id: string\n  handle: string\n  title: string\n  price: string\n  reducedPrice: string\n  categoriesString: string\n  image: {\n    alt: string\n    gatsbyImageData: IGatsbyImageData\n  }\n  quantity: number\n}\n\nexport class WishlistService {\n  static key = 'wishlist'\n\n  constructor() {}\n\n  static setWishlist(list: WishlistProduct[]) {\n    if (typeof window === 'undefined') return\n\n    localStorage.setItem(WishlistService.key, JSON.stringify(list))\n  }\n\n  static getWishlist(): WishlistProduct[] {\n    if (typeof window === 'undefined') return []\n\n    return JSON.parse(window.localStorage.getItem(WishlistService.key) || '[]')\n  }\n\n  static addToWishlist(product: WishlistProduct) {\n    const wishList = WishlistService.getWishlist()\n    wishList.push(product)\n\n    WishlistService.setWishlist(wishList)\n  }\n\n  static updateQuantity(productId: string, quantity: number) {\n    const wishList = WishlistService.getWishlist()\n    const product = wishList.find(p => p.id === productId)\n\n    if (product) {\n      product.quantity = quantity\n    }\n\n    WishlistService.setWishlist(wishList)\n  }\n\n  static removeFromWishlist(productId: string) {\n    const wishList = WishlistService.getWishlist()\n    const index = wishList.findIndex(p => p.id === productId)\n\n    if (index === -1) return\n\n    wishList.splice(index, 1)\n\n    WishlistService.setWishlist(wishList)\n  }\n}\n\nexport function useWishlist() {\n  const [wishlist, setWishlist] = React.useState(WishlistService.getWishlist())\n\n  React.useEffect(() => {\n    const wishlist = WishlistService.getWishlist()\n    setWishlist(wishlist)\n  }, [])\n\n  return {\n    wishlist,\n    addToWishlist: (product: WishlistProduct) => {\n      WishlistService.addToWishlist(product)\n      setWishlist(WishlistService.getWishlist())\n    },\n    updateQuantity: (productId: string, quantity: number) => {\n      WishlistService.updateQuantity(productId, quantity)\n      setWishlist(WishlistService.getWishlist())\n    },\n    removeFromWishlist: (productId: string) => {\n      WishlistService.removeFromWishlist(productId)\n      setWishlist(WishlistService.getWishlist())\n    }\n  }\n}\n","import {Heading, useColorModeValue, VStack} from '@chakra-ui/react'\nimport React from 'react'\nimport {generateProductCard} from '../ProductCardLayout'\n\nimport {ResponsiveSlider} from './Slider'\nimport {Link} from 'gatsby'\n\nexport const ProductSliderLayout = (props: {\n  title: string\n  products: Array<any>\n}) => {\n  const productsForSlider = React.useMemo(\n    () =>\n      props.products.map(product => (\n        <Link\n          to={`/products/${product.handle}`}\n          draggable=\"false\"\n          onDragStart={e => e.preventDefault()}>\n          {generateProductCard(product)}\n        </Link>\n      )),\n    [props.products]\n  )\n\n  return (\n    <VStack spacing={6}>\n      <Heading textAlign={'center'} size=\"xl\" borderBottom={'1px solid'}>\n        {props.title}\n      </Heading>\n      <ResponsiveSlider\n        items={productsForSlider}\n        containerPadding={{base: 15}}\n        progressProps={{\n          colorScheme: 'agt.grayScheme',\n          bgColor: useColorModeValue('gray.200', 'gray.600')\n        }}\n      />\n    </VStack>\n  )\n}\n","import {\n  AspectRatio,\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Text,\n  useColorModeValue,\n  VStack,\n  Icon,\n  Divider,\n  Center,\n  WrapItem,\n  Wrap,\n  useClipboard,\n  useDisclosure\n} from '@chakra-ui/react'\nimport React from 'react'\nimport {Breadcrumbs, ShopLayout} from '../ShopLayout'\n\nimport {MdMessage} from 'react-icons/md'\nimport {FaHeart, FaShare} from 'react-icons/fa'\nimport {GatsbyImage, IGatsbyImageData} from 'gatsby-plugin-image'\nimport {ProductSliderLayout} from '../ProductSliderLayout'\nimport {BaseLayout} from '../BaseLayout'\nimport {BannerLayout} from '../BannerLayout'\nimport ContactModal from '../../components/organisms/ContactModal'\n\nconst Header = (props: {title: string; path: string}) => {\n  return (\n    <VStack align=\"left\" my=\"2\">\n      <Breadcrumbs path={props.path} />\n      <Heading size=\"xl\" fontWeight={'semibold'}>\n        {props.title}\n      </Heading>\n    </VStack>\n  )\n}\n\nfunction Price(props: {price: string; discountPrice?: string}) {\n  const price = `${parseFloat(props.price).toFixed(2)} €`\n  if (props.discountPrice) {\n    const discountPrice = `${parseFloat(props.discountPrice).toFixed(2)} €`\n    // strike through price and put discount price on the right side\n    return (\n      <Flex\n        direction=\"row\"\n        wrap=\"wrap\"\n        justifyContent={{\n          base: 'center',\n          md: 'flex-start'\n        }}>\n        <Text\n          fontSize=\"xl\"\n          fontWeight=\"semibold\"\n          color=\"gray.600\"\n          textDecoration={'line-through'}>\n          {price}\n        </Text>\n\n        <Heading\n          size=\"3xl\"\n          mt={{\n            base: 0,\n            md: 4\n          }}\n          fontWeight={'semibold'}\n          color=\"red.500\">\n          {discountPrice}\n        </Heading>\n      </Flex>\n    )\n  }\n\n  return (\n    <Heading size=\"3xl\" fontWeight={'semibold'}>\n      {price}\n    </Heading>\n  )\n}\n\ntype SliderImage = {\n  alt: string\n  gatsbyImageData: IGatsbyImageData\n}\n\nconst ImageThumbnailWrapItem = (props: {\n  image: SliderImage\n  active: boolean\n  onClick: () => void\n}) => {\n  const {alt, gatsbyImageData} = props.image\n  return (\n    <WrapItem\n      boxSize={{base: '16', md: '20'}}\n      onClick={props.onClick}\n      cursor=\"pointer\"\n      boxShadow={props.active ? 'inset 0px 4px 0px 0px #eb1933' : 'none'}\n      p={2}\n      mr={2}\n      mb={2}\n      _hover={{\n        bg: useColorModeValue('gray.300', 'gray.800')\n      }}\n      transition=\"ease-out\">\n      <GatsbyImage image={gatsbyImageData} alt={alt} />\n    </WrapItem>\n  )\n}\n\nconst ImageSlider = (props: {\n  featuredImage: SliderImage\n  images: Array<SliderImage>\n  productMoreDetail?: React.ComponentProps<typeof ProductMoreDetail>\n}) => {\n  // null is featured image\n  const [currentImage, setCurrentImage] = React.useState<SliderImage>(\n    props.featuredImage\n  )\n\n  return (\n    <Box my=\"4\" w={'100%'}>\n      <AspectRatio ratio={16 / 9}>\n        <Box>\n          <GatsbyImage\n            image={currentImage.gatsbyImageData}\n            alt={currentImage.alt}\n          />\n        </Box>\n      </AspectRatio>\n      <Wrap\n        bg={useColorModeValue('gray.200', 'gray.700')}\n        spacing={0}\n        justify=\"center\">\n        <ImageThumbnailWrapItem\n          image={props.featuredImage}\n          active={currentImage === props.featuredImage}\n          onClick={() => setCurrentImage(props.featuredImage)}\n        />\n\n        {props.images.map((image, index) => (\n          <ImageThumbnailWrapItem\n            key={index}\n            image={image}\n            active={currentImage === image}\n            onClick={() => setCurrentImage(image)}\n          />\n        ))}\n      </Wrap>\n\n      <Box display={{base: 'none', md: 'block'}}>\n        <ProductMoreDetail {...props.productMoreDetail!} />\n      </Box>\n    </Box>\n  )\n}\n\nconst ProductDetail = (props: {\n  id: string\n  title: string\n  price: string\n  discountPrice?: string\n  status: string\n  isOnWishList?: boolean\n  onWishlistAdd: (id: string) => void\n}) => {\n  const {isOpen, onOpen, onClose} = useDisclosure()\n\n  return (\n    <>\n      <ContactModal\n        wishlist={[\n          {\n            title: props.title,\n            quantity: 1\n          }\n        ]}\n        isOpen={isOpen}\n        heading={<p>Kaufanfrage (unverbindlich)</p>}\n        text={''}\n        onClose={() => onClose()}\n      />\n\n      <Box\n        w={{base: '100%', md: '40%'}}\n        minW=\"300px\"\n        pl={{base: 0, md: 4}}\n        position={'sticky'}\n        top=\"15\"\n        alignSelf={'flex-start'}>\n        <VStack align={'left'} spacing=\"4\">\n          <Price price={props.price} discountPrice={props.discountPrice} />\n          <Text size=\"xs\" fontWeight={'thin'}>\n            inkl. MwSt.\n          </Text>\n          <Text color={useColorModeValue('green.500', 'green.300')}>\n            {props.status}\n          </Text>\n          <Button\n            fontSize={'2xl'}\n            fontWeight={'semibold'}\n            textTransform=\"uppercase\"\n            leftIcon={<Icon as={MdMessage} />}\n            borderRadius={'full'}\n            bg={'agt.gray'}\n            color={'white'}\n            _hover={{\n              bg: 'agt.blue'\n            }}\n            size=\"lg\"\n            onClick={onOpen}>\n            <Text>Jetzt anfragen</Text>\n          </Button>\n          <Divider />\n          <Flex alignItems={'center'} justifyContent=\"center\" fontSize={'xl'}>\n            <Box mx=\"auto\" onClick={() => props.onWishlistAdd(props.id)}>\n              <Text\n                fontWeight={'semibold'}\n                color={props.isOnWishList ? 'red.500' : undefined}\n                _hover={{\n                  color: props.isOnWishList ? 'red.400' : 'red.300'\n                }}\n                cursor=\"pointer\">\n                <Center>\n                  <Icon as={FaHeart} mr=\"2\" />\n                  Merken\n                </Center>\n              </Text>\n            </Box>\n            <Box mx=\"auto\">\n              <ShareText />\n            </Box>\n          </Flex>\n          <Divider />\n        </VStack>\n      </Box>\n    </>\n  )\n}\n\nfunction ShareText() {\n  const value = typeof window !== 'undefined' ? window.location.href : ''\n\n  const {hasCopied, onCopy} = useClipboard(value)\n\n  return (\n    <Text\n      fontWeight={'semibold'}\n      verticalAlign=\"center\"\n      color={hasCopied ? 'red.500' : undefined}\n      _hover={{\n        color: hasCopied ? 'red.400' : 'red.300'\n      }}\n      cursor=\"pointer\"\n      onClick={onCopy}>\n      <Center>\n        <Icon as={FaShare} mr=\"2\" />\n        Teilen\n        {hasCopied && (\n          <Text ml=\"2\" fontWeight={'thin'}>\n            (Kopiert!)\n          </Text>\n        )}\n      </Center>\n    </Text>\n  )\n}\n\nfunction replaceHexColorsInHTML(\n  html: string,\n  coloraHex: string,\n  colorbHex: string\n) {\n  return html.replaceAll(coloraHex, colorbHex)\n}\n\nconst ProductMoreDetail = (props: {description: string}) => {\n  const color = useColorModeValue('#000000', '#ffffff')\n\n  const html = replaceHexColorsInHTML(props.description, '#000000', color)\n\n  return (\n    <Box py=\"8\">\n      <Box dangerouslySetInnerHTML={{__html: html}} />\n    </Box>\n  )\n}\n\nexport const ShopProductLayout = (props: {\n  header: React.ComponentProps<typeof BannerLayout>\n  imageSlider: React.ComponentProps<typeof ImageSlider>\n  productDetail: React.ComponentProps<typeof ProductDetail>\n  productMoreDetail: React.ComponentProps<typeof ProductMoreDetail>\n  featuredProducts: {\n    products: Array<any>\n  }\n}) => {\n  return (\n    <BaseLayout withSearch={true} activePath={props.header.path}>\n      <BannerLayout {...props.header} />\n      <ShopLayout>\n        {/* <Header {...props.header} /> */}\n        <VStack spacing={12} w=\"100%\">\n          <Box w=\"100%\">\n            <Flex direction={{base: 'column', lg: 'row'}}>\n              <ImageSlider\n                {...props.imageSlider}\n                productMoreDetail={props.productMoreDetail}\n              />\n              <ProductDetail {...props.productDetail} />\n            </Flex>\n            <Box display={{base: 'block', md: 'none'}}>\n              <ProductMoreDetail {...props.productMoreDetail} />\n            </Box>\n          </Box>\n          <ProductSliderLayout\n            title=\"Unsere Empfehlungen\"\n            {...props.featuredProducts}\n          />\n          <Box h=\"14\"></Box>\n        </VStack>\n      </ShopLayout>\n    </BaseLayout>\n  )\n}\n","import {navigate, PageProps} from 'gatsby'\nimport {IGatsbyImageData} from 'gatsby-plugin-image'\nimport {WishlistService, useWishlist} from '../../services/wishlist'\nimport {ShopProductLayout} from '../../layout/ShopProductLayout'\n\ntype ProductPageProps = PageProps<\n  {},\n  {\n    handle: string\n    header: {title: string}\n    imageSlider: {\n      featuredImage: {\n        alt: string\n        gatsbyImageData: IGatsbyImageData\n      }\n      images: [\n        {\n          alt: string\n          gatsbyImageData: IGatsbyImageData\n        }\n      ]\n    }\n    productDetail: {\n      id: string\n      price: string\n      discountPrice?: string\n      tags: string[]\n    }\n    productMoreDetail: {\n      description: string\n    }\n    featuredProducts: Array<any>\n  }\n>\n\nconst ProductPage = ({pageContext, path}: ProductPageProps) => {\n  const {wishlist, addToWishlist, removeFromWishlist} = useWishlist()\n\n  const isOnWishList = wishlist.some(\n    item => item.id === pageContext.productDetail.id\n  )\n\n  const handleWishlistAdd = (id: string) => {\n    if (!isOnWishList) {\n      const tagsWithoutCategory = pageContext.productDetail.tags\n        .filter((tag: any) => !tag.startsWith('Kategorie:'))\n        .map((tag: any) => tag.split(':')[1])\n        .join(', ')\n\n      addToWishlist({\n        id,\n        handle: pageContext.handle,\n        title: pageContext.header.title,\n        price: pageContext.productDetail.price,\n        reducedPrice: pageContext.productDetail.discountPrice,\n        image: pageContext.imageSlider.featuredImage,\n        categoriesString: tagsWithoutCategory,\n        quantity: 1\n      })\n    } else {\n      removeFromWishlist(id)\n    }\n  }\n\n  return (\n    <ShopProductLayout\n      featuredProducts={{\n        products: pageContext.featuredProducts\n      }}\n      header={{title: pageContext.header.title, path: path}}\n      imageSlider={pageContext.imageSlider}\n      productDetail={{\n        title: pageContext.header.title,\n        ...pageContext.productDetail,\n        status: 'Verfügbar',\n        isOnWishList,\n\n        onWishlistAdd: handleWishlistAdd\n      }}\n      productMoreDetail={pageContext.productMoreDetail}\n    />\n  )\n}\n\nexport default ProductPage\n"],"names":["isOpen","heading","text","wishlist","onClose","toast","useToast","defaultValues","firstName","lastName","email","message","map","item","quantity","title","join","agbChecked","useForm","handleSubmit","reset","register","formState","errors","isSubmitting","React","onSubmit","data","subject","body","sendEmail","fromEmail","name","description","status","duration","isClosable","isCentered","scrollBehavior","bg","borderRadius","minH","maxW","base","md","xl","ml","fontWeight","mx","mb","Text","Flex","direction","Box","mr","w","isInvalid","htmlFor","placeholder","required","borderColor","pattern","resize","h","mt","colorScheme","type","isLoading","Banner","styled","BannerLayout","props","position","color","gimg","S","src","alt","imgClassName","top","justifyContent","alignItems","path","Heading","size","my","WishlistService","setWishlist","list","window","localStorage","setItem","key","JSON","stringify","getWishlist","parse","getItem","addToWishlist","product","wishList","push","updateQuantity","productId","find","p","id","removeFromWishlist","index","findIndex","splice","useWishlist","ProductSliderLayout","productsForSlider","products","to","handle","draggable","onDragStart","e","preventDefault","generateProductCard","VStack","spacing","textAlign","borderBottom","items","containerPadding","progressProps","bgColor","useColorModeValue","Price","price","parseFloat","toFixed","discountPrice","wrap","fontSize","textDecoration","ImageThumbnailWrapItem","image","gatsbyImageData","WrapItem","boxSize","onClick","cursor","boxShadow","active","_hover","transition","G","ImageSlider","featuredImage","currentImage","setCurrentImage","AspectRatio","ratio","Wrap","justify","images","display","ProductMoreDetail","productMoreDetail","ProductDetail","useDisclosure","onOpen","ContactModal","minW","pl","alignSelf","align","textTransform","leftIcon","as","MdMessage","Divider","onWishlistAdd","isOnWishList","undefined","Center","FaHeart","ShareText","value","location","href","useClipboard","hasCopied","onCopy","verticalAlign","FaShare","html","coloraHex","colorbHex","replaceAll","replaceHexColorsInHTML","py","dangerouslySetInnerHTML","__html","ShopProductLayout","BaseLayout","withSearch","activePath","header","ShopLayout","lg","imageSlider","productDetail","featuredProducts","pageContext","some","tagsWithoutCategory","tags","filter","tag","startsWith","split","reducedPrice","categoriesString"],"sourceRoot":""}
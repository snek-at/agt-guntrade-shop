{"version":3,"file":"d2615fc17353ee00fc1eedc6700efb2ce4bd6048-8aec786cc783e28f6f33.js","mappings":"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","sources":["webpack://agt-guntrade-shop/./node_modules/react-magnetic-di/lib/esm/react/constants.js","webpack://agt-guntrade-shop/./node_modules/react-magnetic-di/lib/esm/react/utils.js","webpack://agt-guntrade-shop/./src/common/utils.tsx","webpack://agt-guntrade-shop/./src/layout/ProductCardLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/ProductCardLayout/style.ts","webpack://agt-guntrade-shop/./node_modules/framer-motion/dist/es/animation/animation-controls.js","webpack://agt-guntrade-shop/./src/layout/ProductSliderLayout/Slider.tsx","webpack://agt-guntrade-shop/./node_modules/framer-motion/dist/es/animation/use-animation.js","webpack://agt-guntrade-shop/./node_modules/framer-motion/dist/es/value/use-motion-value.js","webpack://agt-guntrade-shop/./src/layout/ProductSliderLayout/style.ts","webpack://agt-guntrade-shop/./src/services/mail.ts"],"sourcesContent":["export var KEY = Symbol.for('di');\nexport var PACKAGE_NAME = 'react-magnetic-di';","import { KEY } from './constants';\nvar hasWarned = false;\nexport function warnOnce(message) {\n  if (!hasWarned) {\n    // eslint-disable-next-line no-console\n    console.error('Warning:', message);\n    hasWarned = true;\n  }\n}\nexport function getDisplayName(Comp, wrapper) {\n  if (wrapper === void 0) {\n    wrapper = '';\n  }\n\n  var name = Comp.displayName || Comp.name;\n  return !name || !wrapper ? name : \"\".concat(wrapper, \"(\").concat(name, \")\");\n}\nexport function injectable(from, implementation) {\n  implementation.displayName = getDisplayName(implementation) || getDisplayName(from, 'di');\n\n  if (implementation[KEY] && implementation[KEY] !== from) {\n    warnOnce(\"You are trying to use replacement \\\"\".concat(implementation.displayName, \"\\\" on multiple injectables. \") + \"That will override only the last dependency, as each replacement is uniquely linked.\");\n  }\n\n  implementation[KEY] = from;\n  return implementation;\n}\n/** @deprecated use injectable instead */\n\nexport var mock = injectable;","import {injectable} from 'react-magnetic-di'\nimport {Image} from '@chakra-ui/image'\nimport React from 'react'\nimport {Box} from '@chakra-ui/react'\nimport {PageProps} from 'gatsby'\n\nconst breakpoints = ['0em', '30em', '48em', '62em', '80em', '96em']\n\nexport const mq = breakpoints.map(bp => `@media (min-width: ${bp})`)\n\nexport const GCImage = injectable(\n  (props: {gimg: JSX.Element}) => props.gimg,\n  (props: {gimg: JSX.Element}) => (\n    <Image\n      className={props.gimg.props.imgClassName}\n      alt={props.gimg.props.alt}\n      src={props.gimg.props.src}\n    />\n  )\n)\n\nconst getWindowWidth = () => {\n  return Math.max(\n    document.documentElement.clientWidth || 0,\n    window.innerWidth || 0\n  )\n}\n\nexport const useWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = React.useState<number>()\n\n  React.useEffect(() => {\n    setWindowWidth(getWindowWidth())\n    const handleResize = () => {\n      setWindowWidth(getWindowWidth())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowWidth\n}\n/**\n * Create a array of empty boxes to fill the grid\n * if there are less items than the grid size (6-total).\n *\n * @param items\n * @returns\n */\nexport function gridPadBoxes(\n  items: any[],\n  gridSize: number = 6,\n  filler: JSX.Element = <Box />\n) {\n  const toFill = gridSize - (items.length % gridSize || gridSize)\n\n  if (toFill > 0) {\n    return Array(toFill).fill(filler)\n  }\n  return []\n}\n\nexport const usePrevious = <T extends unknown>(value: T): T | undefined => {\n  const ref = React.useRef<T>()\n  React.useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","import {\n  Flex,\n  Box,\n  Badge,\n  useColorModeValue,\n  HStack,\n  Text,\n  VStack,\n  Button\n} from '@chakra-ui/react'\nimport {GatsbyImage, IGatsbyImageData} from 'gatsby-plugin-image'\nimport React from 'react'\n\nimport {cardStyle} from './style'\n\nfunction calculateTextColorForBackgroundColor(hexColor: string) {\n  const rgb = hexColor\n    .replace('#', '')\n    .match(/../g)\n    ?.map(x => parseInt(x, 16))!\n  const luma = 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]\n  return luma > 140 ? 'black' : 'white'\n}\n\nfunction ImageControls(props: {\n  isActive: boolean\n  controls: Array<{\n    icon: React.ReactElement\n    onClick: () => void\n  }>\n}) {\n  const {isActive} = props\n\n  // hstack with two buttons full width and centered\n\n  // Return a gray box with three icons inside\n  return (\n    <Box\n      hidden={!isActive}\n      d=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg={useColorModeValue('gray.200', 'gray.700')}\n      borderRadius=\"sm\"\n      w=\"100%\"\n      h=\"100%\">\n      <HStack align=\"center\" justify=\"center\" w=\"100%\" spacing={'2'} mx=\"2\">\n        {props.controls.map(control => (\n          <Button\n            w=\"100%\"\n            variant={'ghost'}\n            _focus={{boxShadow: 'none'}}\n            onClick={e => {\n              e.stopPropagation()\n              e.preventDefault()\n              control.onClick()\n            }}>\n            {control.icon}\n          </Button>\n        ))}\n      </HStack>\n    </Box>\n  )\n}\n\nfunction ImageBoxWithTags(props: {\n  image: {\n    alt: string\n    gatsbyImageData: IGatsbyImageData\n  }\n  tags: ProductCardProps['tags']\n}) {\n  // Box with image as background and tags on bottom\n  const {image, tags} = props\n\n  return (\n    <Box\n      className=\"background\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      bg={useColorModeValue('gray.200', 'gray.600')}\n      overflow=\"hidden\"\n      position=\"relative\">\n      <GatsbyImage\n        onDragStart={e => e.preventDefault()}\n        draggable=\"false\"\n        image={image.gatsbyImageData}\n        alt={image.alt}\n      />\n      <Flex position=\"absolute\" top=\"0\" left=\"0\" right=\"0\" p={2}>\n        {tags.map(tag => (\n          <Badge\n            variant=\"solid\"\n            fontSize=\"sm\"\n            fontWeight=\"semibold\"\n            rounded=\"md\"\n            px={2}\n            mr={2}\n            key={tag.name}\n            color={calculateTextColorForBackgroundColor(tag.color)}\n            bgColor={tag.color}\n            textTransform=\"none\">\n            {tag.name}\n          </Badge>\n        ))}\n      </Flex>\n    </Box>\n  )\n}\n\nfunction Price(props: {price: string; discountPrice?: string}) {\n  const price = `${parseFloat(props.price).toFixed(2)} €`\n  if (props.discountPrice) {\n    const discountPrice = `${parseFloat(props.discountPrice).toFixed(2)} €`\n    // strike through price and put discount price on the right side\n    return (\n      <Flex\n        direction=\"row\"\n        wrap=\"wrap\"\n        justifyContent={{\n          base: 'center',\n          md: 'flex-start'\n        }}>\n        <Text\n          fontSize=\"sm\"\n          fontWeight=\"semibold\"\n          color=\"gray.600\"\n          textDecoration={'line-through'}>\n          {price}\n        </Text>\n        <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red.500\" ml={2}>\n          {discountPrice}\n        </Text>\n      </Flex>\n    )\n  }\n\n  return (\n    <Box fontSize=\"sm\" fontWeight=\"semibold\" mb={2}>\n      <Text>{price}</Text>\n    </Box>\n  )\n}\n\nexport interface ProductCardProps {\n  id: string\n  image: {\n    alt: string\n    gatsbyImageData: IGatsbyImageData\n  }\n  name: string\n  categoriesString: string\n  price: string\n  discountPrice?: string\n  tags: Array<{name: string; color: string}>\n  createdAt: string\n}\n\nexport function ProductCardLayout(props: ProductCardProps) {\n  const {id, image, name, categoriesString, price, discountPrice, createdAt} =\n    props\n\n  const getDefaultTags = (tags: typeof props.tags = []) => {\n    if (new Date(createdAt).getTime() > Date.now() - 7 * 24 * 60 * 60 * 1000) {\n      tags.push({name: 'Neu', color: '#00ff00'})\n    }\n\n    if (discountPrice) {\n      const percent = (1 - parseFloat(discountPrice) / parseFloat(price)) * -100\n\n      tags.push({name: `${percent.toFixed(0)}%`, color: '#ff0000'})\n    }\n\n    return tags\n  }\n\n  const [tags, _] = React.useState(getDefaultTags())\n\n  return (\n    <VStack\n      css={cardStyle()}\n      boxSize={'full'}\n      cursor=\"pointer\"\n      textAlign={{\n        base: 'center',\n        md: 'left'\n      }}>\n      <ImageBoxWithTags image={image} tags={tags} />\n      <Box w=\"100%\">\n        <Text fontSize=\"sm\" isTruncated>\n          {categoriesString || '-'}\n        </Text>\n        <Text fontWeight=\"semibold\">{name}</Text>\n        <Price price={price} discountPrice={discountPrice} />\n      </Box>\n    </VStack>\n  )\n}\n\nexport function generateProductCard(item: any) {\n  const tagsWithoutCategory = item.tags\n    .filter((tag: any) => !tag.startsWith('Kategorie:'))\n    .map((tag: any) => tag.split(':')[1])\n    .join(', ')\n\n  return (\n    <ProductCardLayout\n      createdAt={item.createdAt}\n      id={item.id}\n      tags={[]}\n      image={item.featuredImage}\n      name={item.title}\n      categoriesString={tagsWithoutCategory}\n      price={item.contextualPricing.maxVariantPricing.price.amount}\n      discountPrice={\n        item.contextualPricing.maxVariantPricing.compareAtPrice?.amount\n      }\n    />\n  )\n}\n","import {css} from '@emotion/react'\n\nexport const cardStyle = () => css`\n  &:hover {\n    .background {\n      box-shadow: var(--chakra-shadows-xl);\n    }\n  }\n`\n","import { __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.js';\nimport { setValues } from '../render/utils/setters.js';\n/**\n * @public\n */\n\nfunction animationControls() {\n  /**\n   * Track whether the host component has mounted.\n   */\n  var hasMounted = false;\n  /**\n   * Pending animations that are started before a component is mounted.\n   * TODO: Remove this as animations should only run in effects\n   */\n\n  var pendingAnimations = [];\n  /**\n   * A collection of linked component animation controls.\n   */\n\n  var subscribers = new Set();\n  var controls = {\n    subscribe: function subscribe(visualElement) {\n      subscribers.add(visualElement);\n      return function () {\n        return void subscribers.delete(visualElement);\n      };\n    },\n    start: function start(definition, transitionOverride) {\n      /**\n       * TODO: We only perform this hasMounted check because in Framer we used to\n       * encourage the ability to start an animation within the render phase. This\n       * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n       * we can ditch this.\n       */\n      if (hasMounted) {\n        var animations_1 = [];\n        subscribers.forEach(function (visualElement) {\n          animations_1.push(animateVisualElement(visualElement, definition, {\n            transitionOverride: transitionOverride\n          }));\n        });\n        return Promise.all(animations_1);\n      } else {\n        return new Promise(function (resolve) {\n          pendingAnimations.push({\n            animation: [definition, transitionOverride],\n            resolve: resolve\n          });\n        });\n      }\n    },\n    set: function set(definition) {\n      invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n      return subscribers.forEach(function (visualElement) {\n        setValues(visualElement, definition);\n      });\n    },\n    stop: function stop() {\n      subscribers.forEach(function (visualElement) {\n        stopAnimation(visualElement);\n      });\n    },\n    mount: function mount() {\n      hasMounted = true;\n      pendingAnimations.forEach(function (_a) {\n        var animation = _a.animation,\n            resolve = _a.resolve;\n        controls.start.apply(controls, __spreadArray([], __read(animation))).then(resolve);\n      });\n      return function () {\n        hasMounted = false;\n        controls.stop();\n      };\n    }\n  };\n  return controls;\n}\n\nexport { animationControls };","import {\n  Box,\n  Icon,\n  IconButton,\n  IconButtonProps,\n  HStack,\n  VStack,\n  StackProps,\n  useBreakpointValue,\n  SimpleGrid,\n  Flex,\n  BoxProps,\n  Progress,\n  ProgressProps,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport React from 'react'\nimport {FaChevronRight, FaChevronLeft} from 'react-icons/fa'\nimport {motion, useMotionValue, useAnimation} from 'framer-motion'\n\nimport {useWindowWidth} from '../../common/utils'\nimport {CarouselStyle} from './style'\n\n// #region Interfaces\n\ninterface ResponsiveNumber {\n  base?: number\n  sm?: number\n  md?: number\n  lg?: number\n  xl?: number\n  '2xl'?: number\n}\n\ninterface BaseProps {\n  spacing: number\n  itemWidth: number\n  items: Array<React.ReactNode>\n}\n\ninterface SliderProps extends BaseProps {\n  containerPadding: number\n  maxWidthInVW: number\n  screenWidth: number | undefined\n  progressProps: ProgressProps\n  rows: number\n}\n\ninterface GridProps extends BaseProps {\n  maxWidth: number | undefined\n  itemsPerRow: number\n}\n\ninterface ResponsiveSliderProps {\n  sliderRows?: ResponsiveNumber\n  progressProps?: ProgressProps\n  containerPadding?: ResponsiveNumber\n  sliderSpacing?: ResponsiveNumber\n  gridSpacing?: ResponsiveNumber\n  maxWidthInVW?: ResponsiveNumber\n  itemWidth?: ResponsiveNumber\n  items: Array<React.ReactNode>\n  itemsPerRow?: ResponsiveNumber\n  breakpoint?: 'base' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n}\n\n// #endregion\n\n// #region Functions\nconst SliderStack = motion<StackProps>(HStack)\nconst MotionBox = motion<BoxProps>(Box)\n\nconst Slider = (props: SliderProps) => {\n  const animation = useAnimation()\n  const [curPage, setCurPage] = React.useState(0)\n  const [isDragging, setIsDragging] = React.useState(false)\n\n  const maxW = (props.screenWidth || 0) * (props.maxWidthInVW / 100)\n  let possibleCards = Math.floor(maxW / props.itemWidth)\n\n  if (\n    possibleCards * props.itemWidth + (possibleCards - 1) * props.spacing >\n    maxW\n  ) {\n    possibleCards -= 1\n  }\n\n  const containerWidth = React.useMemo(\n    () =>\n      possibleCards * props.itemWidth +\n      (possibleCards - 1) * props.spacing +\n      props.containerPadding * 2,\n    [props, possibleCards]\n  )\n\n  const pageCount = React.useMemo(\n    () => Math.ceil(Math.ceil(props.items.length / possibleCards) / props.rows),\n    [props, possibleCards]\n  )\n\n  const snapDistance = React.useMemo(() => 1 / possibleCards, [possibleCards])\n\n  React.useEffect(() => {\n    if (pageCount < curPage) {\n      setCurPage(pageCount - 1)\n    }\n  }, [pageCount])\n\n  const handlePageNavigate = (direction: 'left' | 'right') => {\n    let targetPage: number = curPage\n    if (direction === 'left') {\n      if (curPage > 0) {\n        targetPage = Math.floor(curPage - 1)\n      }\n    } else {\n      if (curPage < pageCount - 1) {\n        targetPage = Math.floor(curPage + 1)\n      }\n    }\n    calculateDistanceAndAnimate(targetPage)\n    setCurPage(targetPage)\n  }\n\n  const NavigationButton = (props: {direction: 'left' | 'right'}) => {\n    const customProps: IconButtonProps = {\n      'aria-label': `Slide to ${props.direction}`,\n      position: 'absolute',\n      display: {base: 'none', lg: 'block'},\n      boxSize: '16',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      zIndex: 1,\n      cursor: 'pointer',\n      bgColor: 'black',\n      _hover: {\n        boxShadow: '0px 0px 10px rgba(0,0,0,0.1)'\n      },\n      className: 'button',\n      isRound: true,\n      onClick: () => handlePageNavigate(props.direction)\n    }\n\n    if (props.direction === 'left') {\n      return (\n        <IconButton\n          {...customProps}\n          left={5}\n          icon={\n            <Icon\n              color={useColorModeValue('gray.200', 'gray.600')}\n              boxSize=\"8\"\n              as={FaChevronLeft}\n            />\n          }\n        />\n      )\n    } else {\n      return (\n        <IconButton\n          {...customProps}\n          right={5}\n          icon={\n            <Icon\n              color={useColorModeValue('gray.200', 'gray.600')}\n              boxSize=\"8\"\n              as={FaChevronRight}\n            />\n          }\n        />\n      )\n    }\n  }\n  const x = useMotionValue(0)\n\n  const calculateDistanceAndAnimate = (targetPage: number) => {\n    const distance = -(\n      containerWidth +\n      props.spacing -\n      2 * props.containerPadding\n    )\n\n    const position = x.get() === 0 ? curPage * distance : x.get()\n    const targetPx = targetPage * distance\n    const solution = targetPx / position\n\n    animation.start({\n      x:\n        position % distance === 0 || targetPx === 0\n          ? Math.ceil(targetPx)\n          : position * solution > 0\n          ? 0\n          : Math.ceil(position * solution),\n      transition: {duration: '0.2'}\n    })\n  }\n\n  const handleDragEnd = () => {\n    const position = x.get()\n    const pageCandidateWithoutSnap = -(position / containerWidth)\n    const pageCandidate =\n      curPage +\n      (pageCandidateWithoutSnap < curPage ? -snapDistance : snapDistance)\n\n    calculateDistanceAndAnimate(\n      pageCandidate > pageCount - 1\n        ? pageCount - 1\n        : pageCandidate < 0\n        ? 0\n        : (pageCandidateWithoutSnap < curPage\n            ? Math.ceil(pageCandidate * 100000)\n            : Math.floor(pageCandidate * 100000)) / 100000\n    )\n\n    if (pageCandidate > pageCount - 1) {\n      setCurPage(pageCount - 1)\n    } else if (pageCandidate < 0) {\n      setCurPage(0)\n    } else {\n      setCurPage(\n        (pageCandidateWithoutSnap < curPage\n          ? Math.ceil(pageCandidate * 100000)\n          : Math.floor(pageCandidate * 100000)) / 100000\n      )\n    }\n  }\n\n  const itemsInRows: Array<any> = []\n  const cardsPerRow = Math.ceil(props.items.length / props.rows)\n  let last = 0\n  for (let i = 1; i <= props.rows; i++) {\n    itemsInRows.push(props.items.slice(last, last + cardsPerRow))\n    last += cardsPerRow\n  }\n\n  const rows = (\n    <>\n      {itemsInRows.map(rowitems => (\n        <SliderStack\n          align=\"start\"\n          spacing={`${props.spacing}px`}\n          px={`${props.containerPadding}px`}>\n          {rowitems.map((item: any) => (\n            <MotionBox\n              pointerEvents={isDragging ? 'none' : 'auto'}\n              minWidth={`${props.itemWidth}px`}\n              maxW={`${props.itemWidth}px`}>\n              {item}\n            </MotionBox>\n          ))}\n        </SliderStack>\n      ))}\n    </>\n  )\n  // product card slider with framer motion\n  return (\n    <Flex\n      css={CarouselStyle()}\n      justifyContent={'center'}\n      alignItems={'center'}\n      position=\"relative\"\n      direction={'column'}>\n      <Box maxW={`${maxW}px`} position=\"relative\" className=\"container\">\n        <Box\n          maxW={`${containerWidth}px`}\n          overflow={'hidden'}\n          className=\"inner-container\">\n          <MotionBox\n            style={{x}}\n            drag=\"x\"\n            cursor={isDragging ? 'grabbing' : 'grab'}\n            onDragStart={() => {\n              setIsDragging(true)\n            }}\n            onDragEnd={() => {\n              handleDragEnd()\n              setIsDragging(false)\n            }}\n            w={`${containerWidth * pageCount}px`}\n            dragConstraints={{\n              left: -containerWidth * (pageCount - 1) - props.spacing,\n              right: 0\n            }}\n            dragDirectionLock\n            animate={animation}>\n            <VStack align=\"start\" spacing={`${props.spacing}px`}>\n              {rows}\n            </VStack>\n          </MotionBox>\n        </Box>\n        {curPage > 0 && <NavigationButton direction=\"left\" />}\n        {curPage < pageCount - 1 && <NavigationButton direction=\"right\" />}\n      </Box>\n      <Progress {...props.progressProps} max={pageCount - 1} value={curPage} />\n    </Flex>\n  )\n}\n\nconst GridLayout = (props: GridProps) => {\n  return (\n    <Flex justifyContent={'center'}>\n      <Box maxWidth={props.maxWidth}>\n        <SimpleGrid columns={props.itemsPerRow} spacing={props.spacing / 2}>\n          {props.items.map(item => {\n            return <Box width={props.itemWidth}>{item}</Box>\n          })}\n        </SimpleGrid>\n      </Box>\n    </Flex>\n  )\n}\n\n// #endregion\n\n// #region Exports\n\n/**\n * Wraps the provided items into an Slider or a Grid depending on the size of the device.\n *\n * @type ResponsiveNumber - A Chakra-UI responsive Value (object syntax).\n *\n * @param props.items - type:Array<React.ReactNode> array of items.\n * @param props.spacing - optional default:40 - type:ResponsiveNumber -  The spacing between the cards (in px).\n * @param props.maxWidthInVW - optional default:80 - type:ResponsiveNumber -  The maxWidth of the slider or grid (in vw).\n * @param props.itemWidth - optional default:280 - type:ResponsiveNumber -  The width of a single Item (in px).\n * @param props.itemsPerRow - optional default:1 - type:ResponsiveNumber - The items per row in the Grid.\n * @param props.containerPadding - optional default:0 - type:ResponsiveNumber - The paddingX on the container useful for hover animations with x effect (in px).\n * @param props.breakpoint - optional default:md - type:'base'|'sm'|'md'|'lg'|'xl'|'2xl' - The Chakra breakpoint at which the Grid changes into the Slider.\n * If the value is 'base' no Grid will be displayed.\n * @param props.progressProps - optional - type:ProgressProps - The styling of the Chakra-UI progress element.\n */\nexport const ResponsiveSlider = (props: ResponsiveSliderProps) => {\n  const itemWidth = props.itemWidth ? useBreakpointValue(props.itemWidth) : 280\n  const itemsPerRow = props.itemsPerRow\n    ? useBreakpointValue(props.itemsPerRow)\n    : 1\n  const sliderSpacing = props.sliderSpacing\n    ? useBreakpointValue(props.sliderSpacing)\n    : 40\n  const gridSpacing = props.gridSpacing\n    ? useBreakpointValue(props.gridSpacing)\n    : 20\n  const maxWidthInVW = props.maxWidthInVW\n    ? useBreakpointValue(props.maxWidthInVW)\n    : 80\n  const containerPadding = props.containerPadding\n    ? useBreakpointValue(props.containerPadding)\n    : 0\n  const sliderRows = useBreakpointValue(props.sliderRows || {base: 1})\n  const breakpoint = props.breakpoint || 'md'\n  const screenWidth = useWindowWidth()\n  const baseProgressProps: ProgressProps = {\n    width: `${maxWidthInVW / 2}vw`,\n    height: '5px',\n    mt: 2,\n    borderRadius: 'lg',\n    colorScheme: 'gray'\n  }\n  const progressProps: ProgressProps = {\n    ...baseProgressProps,\n    ...props.progressProps\n  }\n\n  const sliderProps = {\n    rows: sliderRows,\n    progressProps: progressProps,\n    containerPadding: containerPadding,\n    items: props.items,\n    maxWidthInVW: maxWidthInVW,\n    screenWidth: screenWidth,\n    itemWidth: itemWidth,\n    spacing: sliderSpacing\n  }\n\n  const returnValue = useBreakpointValue({\n    base: (\n      <GridLayout\n        items={props.items}\n        maxWidth={(screenWidth || 0) * (maxWidthInVW / 100)}\n        itemWidth={itemWidth}\n        spacing={gridSpacing}\n        itemsPerRow={itemsPerRow}\n      />\n    ),\n    [breakpoint]: <Slider {...sliderProps} />\n  })\n\n  return <>{returnValue}</>\n}\n// #endregion\n","import { animationControls } from './animation-controls.js';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.js';\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\n\nfunction useAnimation() {\n  var controls = useConstant(animationControls);\n  useEffect(controls.mount, []);\n  return controls;\n}\n\nexport { useAnimation };","import { __read } from 'tslib';\nimport { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.js';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { useConstant } from '../utils/use-constant.js';\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = __read(useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nexport { useMotionValue };","import {css} from '@emotion/react'\n\nexport const CarouselStyle = () => css`\n  .container {\n    &:hover {\n      .button {\n        opacity: 1;\n        pointer-events: auto;\n      }\n    }\n    .button {\n      transition: opacity 150ms;\n      opacity: 0;\n      pointer-events: none;\n    }\n  }\n`\n","export const sendEmail = async (args: {\n  fromEmail: string\n  name: string\n  subject: string\n  message: string\n}) => {\n  const {fromEmail, name, subject, message} = args\n\n  return await fetch('https://api.snek.at/mail/send', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      to_email: 'nicoschett@icloud.com',\n      reply_to_email: fromEmail,\n      subject: `${name} - ${subject}`,\n      content: message\n    })\n  })\n}\n"],"names":["KEY","Symbol","for","hasWarned","getDisplayName","Comp","wrapper","name","displayName","concat","injectable","from","implementation","message","console","error","mq","map","bp","GCImage","props","gimg","className","imgClassName","alt","src","getWindowWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","useWindowWidth","React","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","gridPadBoxes","items","gridSize","filler","Box","toFill","length","Array","fill","ImageBoxWithTags","image","tags","borderRadius","boxShadow","bg","useColorModeValue","overflow","position","G","onDragStart","e","preventDefault","draggable","gatsbyImageData","Flex","top","left","right","p","tag","Badge","variant","fontSize","fontWeight","rounded","px","mr","color","hexColor","rgb","replace","match","x","parseInt","bgColor","textTransform","Price","price","parseFloat","toFixed","discountPrice","direction","wrap","justifyContent","base","md","Text","textDecoration","ml","mb","ProductCardLayout","id","categoriesString","createdAt","Date","getTime","now","push","percent","getDefaultTags","VStack","css","boxSize","cursor","textAlign","w","isTruncated","generateProductCard","item","tagsWithoutCategory","filter","startsWith","split","join","featuredImage","title","contextualPricing","maxVariantPricing","amount","compareAtPrice","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations_1","forEach","Promise","all","resolve","animation","set","stop","mount","_a","apply","then","SliderStack","motion","HStack","MotionBox","Slider","useEffect","curPage","setCurPage","isDragging","setIsDragging","maxW","screenWidth","maxWidthInVW","possibleCards","floor","itemWidth","spacing","containerWidth","containerPadding","pageCount","ceil","rows","snapDistance","NavigationButton","customProps","display","lg","transform","zIndex","_hover","isRound","onClick","targetPage","calculateDistanceAndAnimate","icon","as","FaChevronLeft","FaChevronRight","initial","value","useContext","MotionConfigContext","isStatic","setLatest_1","useState","onChange","useMotionValue","distance","get","targetPx","solution","transition","duration","itemsInRows","cardsPerRow","last","i","slice","rowitems","align","pointerEvents","minWidth","alignItems","style","drag","onDragEnd","pageCandidateWithoutSnap","pageCandidate","dragConstraints","dragDirectionLock","animate","progressProps","GridLayout","maxWidth","SimpleGrid","columns","itemsPerRow","width","ResponsiveSlider","useBreakpointValue","sliderSpacing","gridSpacing","sliderRows","breakpoint","baseProgressProps","height","mt","colorScheme","sliderProps","returnValue","sendEmail","args","fromEmail","subject","fetch","method","headers","body","JSON","stringify","to_email","reply_to_email","content"],"sourceRoot":""}
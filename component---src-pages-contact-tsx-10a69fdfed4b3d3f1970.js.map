{"version":3,"file":"component---src-pages-contact-tsx-10a69fdfed4b3d3f1970.js","mappings":"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","sources":["webpack://agt-guntrade-shop/./node_modules/react-magnetic-di/lib/esm/react/constants.js","webpack://agt-guntrade-shop/./node_modules/react-magnetic-di/lib/esm/react/utils.js","webpack://agt-guntrade-shop/./src/common/utils.tsx","webpack://agt-guntrade-shop/./src/components/organisms/ContactForm/index.tsx","webpack://agt-guntrade-shop/./src/layout/BannerLayout/style.ts","webpack://agt-guntrade-shop/./src/layout/BannerLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/GoogleMapsLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/ContactLayout/index.tsx","webpack://agt-guntrade-shop/./src/pages/contact.tsx","webpack://agt-guntrade-shop/./src/services/mail.ts","webpack://agt-guntrade-shop/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["export var KEY = Symbol.for('di');\nexport var PACKAGE_NAME = 'react-magnetic-di';","import { KEY } from './constants';\nvar hasWarned = false;\nexport function warnOnce(message) {\n  if (!hasWarned) {\n    // eslint-disable-next-line no-console\n    console.error('Warning:', message);\n    hasWarned = true;\n  }\n}\nexport function getDisplayName(Comp, wrapper) {\n  if (wrapper === void 0) {\n    wrapper = '';\n  }\n\n  var name = Comp.displayName || Comp.name;\n  return !name || !wrapper ? name : \"\".concat(wrapper, \"(\").concat(name, \")\");\n}\nexport function injectable(from, implementation) {\n  implementation.displayName = getDisplayName(implementation) || getDisplayName(from, 'di');\n\n  if (implementation[KEY] && implementation[KEY] !== from) {\n    warnOnce(\"You are trying to use replacement \\\"\".concat(implementation.displayName, \"\\\" on multiple injectables. \") + \"That will override only the last dependency, as each replacement is uniquely linked.\");\n  }\n\n  implementation[KEY] = from;\n  return implementation;\n}\n/** @deprecated use injectable instead */\n\nexport var mock = injectable;","import {injectable} from 'react-magnetic-di'\nimport {Image} from '@chakra-ui/image'\nimport React from 'react'\nimport {Box} from '@chakra-ui/react'\nimport {PageProps} from 'gatsby'\n\nconst breakpoints = ['0em', '30em', '48em', '62em', '80em', '96em']\n\nexport const mq = breakpoints.map(bp => `@media (min-width: ${bp})`)\n\nexport const GCImage = injectable(\n  (props: {gimg: JSX.Element}) => props.gimg,\n  (props: {gimg: JSX.Element}) => (\n    <Image\n      className={props.gimg.props.imgClassName}\n      alt={props.gimg.props.alt}\n      src={props.gimg.props.src}\n    />\n  )\n)\n\nconst getWindowWidth = () => {\n  return Math.max(\n    document.documentElement.clientWidth || 0,\n    window.innerWidth || 0\n  )\n}\n\nexport const useWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = React.useState<number>()\n\n  React.useEffect(() => {\n    setWindowWidth(getWindowWidth())\n    const handleResize = () => {\n      setWindowWidth(getWindowWidth())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowWidth\n}\n/**\n * Create a array of empty boxes to fill the grid\n * if there are less items than the grid size (6-total).\n *\n * @param items\n * @returns\n */\nexport function gridPadBoxes(\n  items: any[],\n  gridSize: number = 6,\n  filler: JSX.Element = <Box />\n) {\n  const toFill = gridSize - (items.length % gridSize || gridSize)\n\n  if (toFill > 0) {\n    return Array(toFill).fill(filler)\n  }\n  return []\n}\n\nexport const usePrevious = <T extends unknown>(value: T): T | undefined => {\n  const ref = React.useRef<T>()\n  React.useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","import {\n  FormControl,\n  Flex,\n  Box,\n  BoxProps,\n  FormLabel,\n  Input,\n  Select,\n  Textarea,\n  Checkbox,\n  Button,\n  useToast\n} from '@chakra-ui/react'\nimport {Controller, useForm} from 'react-hook-form'\nimport {sendEmail} from '../../../services/mail'\n\ntype FormData = {\n  name: string\n  lastname: string\n  email: string\n  requestOption: string\n  message: string\n  agbChecked: boolean\n}\n\ninterface IProps extends BoxProps {\n  requestOptions: string[]\n}\n\nexport const ContactForm = (props: IProps) => {\n  const toast = useToast()\n\n  const defaultValues: FormData = {\n    name: '',\n    lastname: '',\n    email: '',\n    requestOption: '',\n    message: '',\n    agbChecked: false\n  }\n\n  const {\n    handleSubmit,\n    reset,\n    register,\n    control,\n    formState: {errors, isSubmitting}\n  } = useForm<typeof defaultValues>({\n    defaultValues\n  })\n\n  const onSubmit = async (data: FormData) => {\n    console.log(data)\n\n    const {name, lastname, email, requestOption, message} = data\n\n    const subject = `Anfrage (${requestOption}) über AGT Shop`\n\n    const body = `\nAnfrage von ${name} ${lastname} (${email}) über AGT Shop.\n\n<== Inhalt der Anfrage ==>\n\n${message}\n`\n\n    await sendEmail({\n      fromEmail: email,\n      name: `${name} ${lastname}`,\n      subject,\n      message: body\n    })\n\n    toast({\n      title: 'Anfrage erfolgreich versendet',\n      description:\n        'Vielen Dank für Ihre Anfrage. Wir werden uns so schnell wie möglich bei Ihnen melden.',\n      status: 'success',\n      duration: 9000,\n      isClosable: true\n    })\n\n    reset()\n  }\n\n  return (\n    <Box {...props}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Flex mb=\"3\" direction={{base: 'column', md: 'row'}}>\n          <Box mr=\"5\" w={{base: '100%', md: '50%'}}>\n            <FormControl isInvalid={!!errors.name}>\n              <FormLabel htmlFor=\"first-name\">Vorname</FormLabel>\n              <Input\n                id=\"first-name\"\n                placeholder=\"Max\"\n                bg=\"white\"\n                borderColor=\"#D4D4D9\"\n                {...register('name', {required: true})}\n              />\n            </FormControl>\n          </Box>\n          <Box w={{base: '100%', md: '50%'}}>\n            <FormControl isInvalid={!!errors.lastname}>\n              <FormLabel htmlFor=\"last-name\">Nachname</FormLabel>\n              <Input\n                id=\"last-name\"\n                placeholder=\"Mustermann\"\n                bg=\"white\"\n                borderColor=\"#D4D4D9\"\n                {...register('lastname', {required: true})}\n              />\n            </FormControl>\n          </Box>\n        </Flex>\n        <Flex direction={{base: 'column', md: 'row'}}>\n          <Box w={{base: '100%', md: '50%'}} mr=\"5\">\n            <FormControl isInvalid={!!errors.email}>\n              <FormLabel htmlFor=\"email\">Email Adresse</FormLabel>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"max.mustermann@example.at\"\n                bg=\"white\"\n                borderColor=\"#D4D4D9\"\n                {...register('email', {\n                  required: true,\n                  pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\n                })}\n              />\n            </FormControl>\n          </Box>\n          <Box w={{base: '100%', md: '50%'}}>\n            <FormControl isInvalid={!!errors.requestOption}>\n              <FormLabel htmlFor=\"request-type\">\n                Welches Anliegen haben Sie?\n              </FormLabel>\n              <Controller\n                name=\"requestOption\"\n                control={control}\n                rules={{required: true}}\n                render={({field}) => (\n                  <Select\n                    placeholder=\"Bitte auswählen\"\n                    bg=\"white\"\n                    borderColor=\"#D4D4D9\"\n                    {...field}>\n                    {props.requestOptions.map((option, index) => (\n                      <option key={index} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </FormControl>\n          </Box>\n        </Flex>\n        <Box mt=\"3\">\n          <FormControl isInvalid={!!errors.message}>\n            <FormLabel htmlFor=\"message\">Nachricht</FormLabel>\n            <Textarea\n              resize=\"vertical\"\n              bg=\"white\"\n              borderColor=\"#D4D4D9\"\n              maxH=\"45vh\"\n              {...register('message', {required: true})}\n            />\n          </FormControl>\n        </Box>\n        <Box>\n          <Flex my=\"3\">\n            <FormControl isInvalid={!!errors.agbChecked}>\n              <Checkbox\n                borderColor=\"#D4D4D9\"\n                h=\"fit-content\"\n                mt=\"0.5\"\n                mr=\"2\"\n                {...register('agbChecked', {required: true})}>\n                Ich habe die AGBs gelesen und stimme der Verarbeitung meiner Daten\n                zu.\n              </Checkbox>\n            </FormControl>\n          </Flex>\n          <Button\n            colorScheme=\"agt.grayScheme\"\n            type=\"submit\"\n            isLoading={isSubmitting}>\n            Absenden\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  )\n}\n","import {Box} from '@chakra-ui/react'\nimport styled from '@emotion/styled'\n\nexport const Banner = styled(Box)`\n  .banner-image {\n    height: 200px;\n    width: 100%;\n    object-fit: cover;\n  }\n`\n","import {\n  Box,\n  Flex,\n  Heading\n} from '@chakra-ui/react'\nimport {GatsbyImage, IGatsbyImageData, StaticImage} from 'gatsby-plugin-image'\nimport {Breadcrumbs, ShopLayout} from '../ShopLayout'\n\nimport {GCImage, gridPadBoxes} from '../../common/utils'\nimport * as style from './style'\n\n\nexport interface BannerLayoutProps {\n  title: string\n  path: string\n}\n\nexport const BannerLayout = (props: BannerLayoutProps) => {\n  return (\n    <Box position={'relative'} color=\"white\">\n      <style.Banner>\n        <GCImage\n          gimg={\n            <StaticImage\n              src=\"https://i.imgur.com/8zG2Ymd.jpeg\"\n              alt=\"bg\"\n              imgClassName=\"banner-image\"\n            />\n          }\n        />\n      </style.Banner>\n      <Flex position={'absolute'} top=\"5\" w='100%' justifyContent={'center'} alignItems={'center'}>\n        <Box w=\"8xl\">\n          <Breadcrumbs path={props.path} />\n          <Heading size=\"2xl\" my=\"8\">\n            {props.title}\n          </Heading>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}","import {Box, Heading, Text, Link, BoxProps} from '@chakra-ui/react'\nimport {useCookieState} from '../../services/cookiemodal'\n\n\nexport const GoogleMaps = (props: BoxProps) => {\n  const cookieState = useCookieState()\n\n  const handleAccept = () => {\n    cookieState.updateCookie('analytics', true)\n    cookieState.accept(true)\n  }\n\n  if (!cookieState.cookie.analytics) {\n    return (\n      <Box bg=\"gray.200\">\n        <Heading as=\"h1\" size=\"xl\">\n          Google Maps is nicht verfügbar\n        </Heading>\n        <Text as=\"h2\" size=\"lg\">\n          Durch Ihre Cookie Einstellungen können wir Google Maps nicht anzeigen.\n        </Text>\n        <Text as=\"h2\" size=\"lg\">\n          Bitte aktivieren Sie Cookies, um Google Maps anzuzeigen.{' '}\n          <Link onClick={handleAccept}>Analytics Cookie aktivieren</Link>\n        </Text>\n      </Box>\n    )\n  }\n\n  return (\n    <Box {...props}>\n      <iframe\n        src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d10977.908361298725!2d14.2921416!3d46.5382484!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xf0d0d69eedf5cb7d!2sWaffenhandel%20T%C3%BCrk!5e0!3m2!1sen!2sat!4v1647540212169!5m2!1sen!2sat\"\n        width=\"100%\"\n        height=\"600\"\n        style={{\n          border: 1\n        }}\n        loading=\"lazy\"\n      />\n    </Box>\n  )\n}\n\nexport default GoogleMaps\n","import React from 'react'\nimport {\n  Container,\n  Icon,\n  Text,\n  useColorModeValue,\n  VStack,\n  SimpleGrid,\n  Center\n} from '@chakra-ui/react'\nimport {BaseLayout} from '../BaseLayout'\nimport GoogleMaps from '../GoogleMapsLayout'\nimport {BannerLayout} from '../BannerLayout'\nimport {ContactForm} from '../../components/organisms/ContactForm'\nimport {FaAddressBook, FaEnvelopeSquare, FaPhoneSquare} from 'react-icons/fa'\n\nexport interface ContactLayoutProps {\n  activePath: string\n  phone: React.ReactNode\n  email: React.ReactNode\n  address: React.ReactNode\n}\n\nexport const ContactLayout = (props: ContactLayoutProps) => {\n  return (\n    <BaseLayout activePath=\"/contact\" withSearch={true}>\n      <BannerLayout title='Kontakt' path={props.activePath} />\n      <Container\n        as=\"section\"\n        maxW=\"8xl\"\n        pt=\"6\"\n        id=\"featuredproducts\"\n        bg={useColorModeValue('white', 'gray.700')}\n        borderWidth=\"1px\"\n        my={{base: 4, md: 8}}\n        px={4}\n        py={4}\n        borderRadius=\"lg\">\n        <ContactForm requestOptions={[]} mb=\"5\" />\n        <GoogleMaps />\n        <SimpleGrid\n          spacing=\"40px\"\n          py={8}\n          columns={[1, 1, 1, 3]}\n          bg=\"agt.gray\"\n          color=\"white\">\n          <Center>\n            <VStack spacing={6}>\n              <Icon as={FaPhoneSquare} boxSize=\"16\" />\n              <Text fontSize=\"xl\" fontWeight=\"semibold\">\n                {props.phone}\n              </Text>\n            </VStack>\n          </Center>\n          <Center>\n            <VStack spacing={6}>\n              <Icon as={FaAddressBook} boxSize=\"16\" />\n              <Text fontSize=\"xl\" fontWeight=\"semibold\">\n                {props.address}\n              </Text>\n            </VStack>\n          </Center>\n          <Center>\n            <VStack spacing={6}>\n              <Icon as={FaEnvelopeSquare} boxSize=\"16\" />\n              <Text fontSize=\"xl\" fontWeight=\"semibold\">\n                {props.email}\n              </Text>\n            </VStack>\n          </Center>\n        </SimpleGrid>\n      </Container>\n    </BaseLayout>\n  )\n}\n","import React from 'react'\nimport {graphql, PageProps} from 'gatsby'\nimport {ContactLayout} from '../layout/ContactLayout'\nimport {connectPage, Field} from '@jaenjs/jaen'\n\nconst ImprintPage = connectPage(\n  ({}: PageProps) => {\n    return (\n      <>\n        <ContactLayout\n          activePath='/Kontakt'\n          email={\n            <Field.Text name=\"email\" defaultValue={'info@agt-guntrade.at'} />\n          }\n          phone={<Field.Text name=\"phone\" defaultValue={'+43 676 3232 12'} />}\n          address={\n            <Field.Text\n              name=\"address\"\n              defaultValue={'Reßnig 20, 9170 Ferlach'}\n            />\n          }\n        />\n      </>\n    )\n  },\n  {\n    displayName: 'ContactPage'\n  }\n)\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default ImprintPage\n","export const sendEmail = async (args: {\n  fromEmail: string\n  name: string\n  subject: string\n  message: string\n}) => {\n  const {fromEmail, name, subject, message} = args\n\n  return await fetch('https://api.snek.at/mail/send', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      to_email: 'nicoschett@icloud.com',\n      reply_to_email: fromEmail,\n      subject: `${name} - ${subject}`,\n      content: message\n    })\n  })\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"names":["KEY","Symbol","for","hasWarned","getDisplayName","Comp","wrapper","name","displayName","concat","injectable","from","implementation","message","console","error","mq","map","bp","GCImage","props","gimg","className","imgClassName","alt","src","getWindowWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","useWindowWidth","React","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","gridPadBoxes","items","gridSize","filler","Box","toFill","length","Array","fill","ContactForm","toast","useToast","useForm","defaultValues","lastname","email","requestOption","agbChecked","handleSubmit","reset","register","control","formState","errors","isSubmitting","onSubmit","data","log","subject","body","sendEmail","fromEmail","title","description","status","duration","isClosable","Flex","mb","direction","base","md","mr","w","isInvalid","htmlFor","id","placeholder","bg","borderColor","required","type","pattern","rules","render","field","requestOptions","option","index","value","mt","resize","maxH","my","h","colorScheme","isLoading","Banner","styled","BannerLayout","position","color","S","top","justifyContent","alignItems","path","Heading","size","GoogleMaps","cookieState","useCookieState","cookie","analytics","width","height","style","border","loading","as","Text","Link","onClick","updateCookie","accept","ContactLayout","BaseLayout","activePath","withSearch","Container","maxW","pt","useColorModeValue","borderWidth","px","py","borderRadius","SimpleGrid","spacing","columns","Center","VStack","FaPhoneSquare","boxSize","fontSize","fontWeight","phone","FaAddressBook","address","FaEnvelopeSquare","connectPage","Field","defaultValue","args","fetch","method","headers","JSON","stringify","to_email","reply_to_email","content","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}
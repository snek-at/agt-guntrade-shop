{"version":3,"file":"component---src-template-pages-shop-page-index-tsx-c40f34617508e6d35aed.js","mappings":"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","sources":["webpack://agt-guntrade-shop/./node_modules/react-magnetic-di/lib/esm/react/constants.js","webpack://agt-guntrade-shop/./node_modules/react-magnetic-di/lib/esm/react/utils.js","webpack://agt-guntrade-shop/./src/common/utils.tsx","webpack://agt-guntrade-shop/./src/layout/BannerLayout/style.ts","webpack://agt-guntrade-shop/./src/layout/BannerLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/ProductCardLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/ProductCardLayout/style.ts","webpack://agt-guntrade-shop/./src/layout/ProductGridLayout/index.tsx","webpack://agt-guntrade-shop/./src/layout/ShopCatalogLayout/index.tsx","webpack://agt-guntrade-shop/./src/templatePages/ShopPage/index.tsx"],"sourcesContent":["export var KEY = Symbol.for('di');\nexport var PACKAGE_NAME = 'react-magnetic-di';","import { KEY } from './constants';\nvar hasWarned = false;\nexport function warnOnce(message) {\n  if (!hasWarned) {\n    // eslint-disable-next-line no-console\n    console.error('Warning:', message);\n    hasWarned = true;\n  }\n}\nexport function getDisplayName(Comp, wrapper) {\n  if (wrapper === void 0) {\n    wrapper = '';\n  }\n\n  var name = Comp.displayName || Comp.name;\n  return !name || !wrapper ? name : \"\".concat(wrapper, \"(\").concat(name, \")\");\n}\nexport function injectable(from, implementation) {\n  implementation.displayName = getDisplayName(implementation) || getDisplayName(from, 'di');\n\n  if (implementation[KEY] && implementation[KEY] !== from) {\n    warnOnce(\"You are trying to use replacement \\\"\".concat(implementation.displayName, \"\\\" on multiple injectables. \") + \"That will override only the last dependency, as each replacement is uniquely linked.\");\n  }\n\n  implementation[KEY] = from;\n  return implementation;\n}\n/** @deprecated use injectable instead */\n\nexport var mock = injectable;","import {injectable} from 'react-magnetic-di'\nimport {Image} from '@chakra-ui/image'\nimport React from 'react'\nimport {Box} from '@chakra-ui/react'\nimport {PageProps} from 'gatsby'\n\nconst breakpoints = ['0em', '30em', '48em', '62em', '80em', '96em']\n\nexport const mq = breakpoints.map(bp => `@media (min-width: ${bp})`)\n\nexport const GCImage = injectable(\n  (props: {gimg: JSX.Element}) => props.gimg,\n  (props: {gimg: JSX.Element}) => (\n    <Image\n      className={props.gimg.props.imgClassName}\n      alt={props.gimg.props.alt}\n      src={props.gimg.props.src}\n    />\n  )\n)\n\nconst getWindowWidth = () => {\n  return Math.max(\n    document.documentElement.clientWidth || 0,\n    window.innerWidth || 0\n  )\n}\n\nexport const useWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = React.useState<number>()\n\n  React.useEffect(() => {\n    setWindowWidth(getWindowWidth())\n    const handleResize = () => {\n      setWindowWidth(getWindowWidth())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowWidth\n}\n/**\n * Create a array of empty boxes to fill the grid\n * if there are less items than the grid size (6-total).\n *\n * @param items\n * @returns\n */\nexport function gridPadBoxes(\n  items: any[],\n  gridSize: number = 6,\n  filler: JSX.Element = <Box />\n) {\n  const toFill = gridSize - (items.length % gridSize || gridSize)\n\n  if (toFill > 0) {\n    return Array(toFill).fill(filler)\n  }\n  return []\n}\n\nexport const usePrevious = <T extends unknown>(value: T): T | undefined => {\n  const ref = React.useRef<T>()\n  React.useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","import {Box} from '@chakra-ui/react'\nimport styled from '@emotion/styled'\n\nexport const Banner = styled(Box)`\n  .banner-image {\n    height: 200px;\n    width: 100%;\n    object-fit: cover;\n  }\n`\n","import {\n  Box,\n  Flex,\n  Heading\n} from '@chakra-ui/react'\nimport {GatsbyImage, IGatsbyImageData, StaticImage} from 'gatsby-plugin-image'\nimport {Breadcrumbs, ShopLayout} from '../ShopLayout'\n\nimport {GCImage, gridPadBoxes} from '../../common/utils'\nimport * as style from './style'\n\n\nexport interface BannerLayoutProps {\n  title: string\n  path: string\n}\n\nexport const BannerLayout = (props: BannerLayoutProps) => {\n  return (\n    <Box position={'relative'} color=\"white\">\n      <style.Banner>\n        <GCImage\n          gimg={\n            <StaticImage\n              src=\"https://i.imgur.com/8zG2Ymd.jpeg\"\n              alt=\"bg\"\n              imgClassName=\"banner-image\"\n            />\n          }\n        />\n      </style.Banner>\n      <Flex position={'absolute'} top=\"5\" w='100%' justifyContent={'center'} alignItems={'center'}>\n        <Box w=\"8xl\">\n          <Breadcrumbs path={props.path} />\n          <Heading size=\"2xl\" my=\"8\">\n            {props.title}\n          </Heading>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}","import {\n  Flex,\n  Box,\n  Badge,\n  useColorModeValue,\n  HStack,\n  Text,\n  VStack,\n  Button\n} from '@chakra-ui/react'\nimport {GatsbyImage, IGatsbyImageData} from 'gatsby-plugin-image'\nimport React from 'react'\n\nimport {cardStyle} from './style'\n\nfunction calculateTextColorForBackgroundColor(hexColor: string) {\n  const rgb = hexColor\n    .replace('#', '')\n    .match(/../g)\n    ?.map(x => parseInt(x, 16))!\n  const luma = 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]\n  return luma > 140 ? 'black' : 'white'\n}\n\nfunction ImageControls(props: {\n  isActive: boolean\n  controls: Array<{\n    icon: React.ReactElement\n    onClick: () => void\n  }>\n}) {\n  const {isActive} = props\n\n  // hstack with two buttons full width and centered\n\n  // Return a gray box with three icons inside\n  return (\n    <Box\n      hidden={!isActive}\n      d=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg={useColorModeValue('gray.200', 'gray.700')}\n      borderRadius=\"sm\"\n      w=\"100%\"\n      h=\"100%\">\n      <HStack align=\"center\" justify=\"center\" w=\"100%\" spacing={'2'} mx=\"2\">\n        {props.controls.map(control => (\n          <Button\n            w=\"100%\"\n            variant={'ghost'}\n            _focus={{boxShadow: 'none'}}\n            onClick={e => {\n              e.stopPropagation()\n              e.preventDefault()\n              control.onClick()\n            }}>\n            {control.icon}\n          </Button>\n        ))}\n      </HStack>\n    </Box>\n  )\n}\n\nfunction ImageBoxWithTags(props: {\n  image: {\n    alt: string\n    gatsbyImageData: IGatsbyImageData\n  }\n  tags: ProductCardProps['tags']\n}) {\n  // Box with image as background and tags on bottom\n  const {image, tags} = props\n\n  return (\n    <Box\n      className=\"background\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      bg={useColorModeValue('gray.200', 'gray.600')}\n      overflow=\"hidden\"\n      position=\"relative\">\n      <GatsbyImage\n        onDragStart={e => e.preventDefault()}\n        draggable=\"false\"\n        image={image.gatsbyImageData}\n        alt={image.alt}\n      />\n      <Flex position=\"absolute\" top=\"0\" left=\"0\" right=\"0\" p={2}>\n        {tags.map(tag => (\n          <Badge\n            variant=\"solid\"\n            fontSize=\"sm\"\n            fontWeight=\"semibold\"\n            rounded=\"md\"\n            px={2}\n            mr={2}\n            key={tag.name}\n            color={calculateTextColorForBackgroundColor(tag.color)}\n            bgColor={tag.color}\n            textTransform=\"none\">\n            {tag.name}\n          </Badge>\n        ))}\n      </Flex>\n    </Box>\n  )\n}\n\nfunction Price(props: {price: string; discountPrice?: string}) {\n  const price = `${parseFloat(props.price).toFixed(2)} €`\n  if (props.discountPrice) {\n    const discountPrice = `${parseFloat(props.discountPrice).toFixed(2)} €`\n    // strike through price and put discount price on the right side\n    return (\n      <Flex\n        direction=\"row\"\n        wrap=\"wrap\"\n        justifyContent={{\n          base: 'center',\n          md: 'flex-start'\n        }}>\n        <Text\n          fontSize=\"sm\"\n          fontWeight=\"semibold\"\n          color=\"gray.600\"\n          textDecoration={'line-through'}>\n          {price}\n        </Text>\n        <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red.500\" ml={2}>\n          {discountPrice}\n        </Text>\n      </Flex>\n    )\n  }\n\n  return (\n    <Box fontSize=\"sm\" fontWeight=\"semibold\" mb={2}>\n      <Text>{price}</Text>\n    </Box>\n  )\n}\n\nexport interface ProductCardProps {\n  id: string\n  image: {\n    alt: string\n    gatsbyImageData: IGatsbyImageData\n  }\n  name: string\n  categoriesString: string\n  price: string\n  discountPrice?: string\n  tags: Array<{name: string; color: string}>\n  createdAt: string\n}\n\nexport function ProductCardLayout(props: ProductCardProps) {\n  const {id, image, name, categoriesString, price, discountPrice, createdAt} =\n    props\n\n  const getDefaultTags = (tags: typeof props.tags = []) => {\n    if (new Date(createdAt).getTime() > Date.now() - 7 * 24 * 60 * 60 * 1000) {\n      tags.push({name: 'Neu', color: '#00ff00'})\n    }\n\n    if (discountPrice) {\n      const percent = (1 - parseFloat(discountPrice) / parseFloat(price)) * -100\n\n      tags.push({name: `${percent.toFixed(0)}%`, color: '#ff0000'})\n    }\n\n    return tags\n  }\n\n  const [tags, _] = React.useState(getDefaultTags())\n\n  return (\n    <VStack\n      css={cardStyle()}\n      boxSize={'full'}\n      cursor=\"pointer\"\n      textAlign={{\n        base: 'center',\n        md: 'left'\n      }}>\n      <ImageBoxWithTags image={image} tags={tags} />\n      <Box w=\"100%\">\n        <Text fontSize=\"sm\" isTruncated>\n          {categoriesString || '-'}\n        </Text>\n        <Text fontWeight=\"semibold\">{name}</Text>\n        <Price price={price} discountPrice={discountPrice} />\n      </Box>\n    </VStack>\n  )\n}\n\nexport function generateProductCard(item: any) {\n  const tagsWithoutCategory = item.tags\n    .filter((tag: any) => !tag.startsWith('Kategorie:'))\n    .map((tag: any) => tag.split(':')[1])\n    .join(', ')\n\n  return (\n    <ProductCardLayout\n      createdAt={item.createdAt}\n      id={item.id}\n      tags={[]}\n      image={item.featuredImage}\n      name={item.title}\n      categoriesString={tagsWithoutCategory}\n      price={item.contextualPricing.maxVariantPricing.price.amount}\n      discountPrice={\n        item.contextualPricing.maxVariantPricing.compareAtPrice?.amount\n      }\n    />\n  )\n}\n","import {css} from '@emotion/react'\n\nexport const cardStyle = () => css`\n  &:hover {\n    .background {\n      box-shadow: var(--chakra-shadows-xl);\n    }\n  }\n`\n","import {\n  Box,\n  Heading,\n  Link,\n  SimpleGrid,\n  SimpleGridProps,\n  VStack\n} from '@chakra-ui/react'\nimport React from 'react'\nimport {gridPadBoxes} from '../../common/utils'\nimport {generateProductCard} from '../ProductCardLayout'\n\nimport {Link as GatsbyLink} from 'gatsby'\n\nexport const ProductGrid = (props: {\n  title?: string\n  items: Array<any>\n  minChildWidth?: SimpleGridProps['minChildWidth']\n  getPath: (handle: string) => string\n}) => {\n  const emptyBoxes = gridPadBoxes(props.items)\n\n  // css grid\n  return (\n    <VStack spacing=\"6\">\n      {props.title && (\n        <Heading textAlign={'center'} size=\"xl\" borderBottom={'1px solid'}>\n          {props.title}\n        </Heading>\n      )}\n      <SimpleGrid spacing={4} minChildWidth={props.minChildWidth || '200px'}>\n        {props.items.map((item, key) => {\n          return (\n            <Link key={item.id} as={GatsbyLink} to={props.getPath(item.handle)}>\n              {generateProductCard(item)}\n            </Link>\n          )\n        })}\n        {emptyBoxes}\n      </SimpleGrid>\n    </VStack>\n  )\n}\n","import {\n  Box,\n  Button,\n  Center,\n  Checkbox,\n  Divider,\n  Drawer,\n  DrawerContent,\n  Flex,\n  Heading,\n  Icon,\n  RangeSlider,\n  RangeSliderFilledTrack,\n  RangeSliderThumb,\n  RangeSliderTrack,\n  Select,\n  Spacer,\n  Spinner,\n  Stack,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  useMediaQuery,\n  VStack\n} from '@chakra-ui/react'\n\nimport {FaFilter, FaSort} from 'react-icons/fa'\nimport React from 'react'\nimport {Breadcrumbs, ShopLayout} from '../ShopLayout'\nimport {ProductGrid} from '../ProductGridLayout'\nimport {BaseLayout} from '../BaseLayout'\nimport {BannerLayout} from '../BannerLayout'\n\n// tag builder => input tag output type:content\n\nexport const Header = (props: {\n  title: string\n  path: string\n  sortOptions: Array<string>\n  onSortChange: (option: string) => void\n  isMobile?: boolean\n  onMobileFilterClick?: () => void\n}) => {\n  return (\n    <>\n      {/* <Breadcrumbs path={props.path} />\n      <Heading size=\"2xl\">{props.title}</Heading> */}\n      <Box\n        my=\"2\"\n        position={'sticky'}\n        top=\"0\"\n        alignSelf={'flex-start'}\n        zIndex=\"1\"\n        bg={useColorModeValue('white', 'gray.700')}>\n        <Flex>\n          {props.isMobile ? (\n            <Button\n              variant=\"unstyled\"\n              leftIcon={<Icon as={FaFilter} />}\n              onClick={props.onMobileFilterClick}>\n              Filter\n            </Button>\n          ) : (\n            <Button\n              leftIcon={<Icon as={FaFilter} />}\n              variant=\"unstyled\"\n              cursor={'default'}\n              _focus={{boxShadow: 'none'}}>\n              Filter\n            </Button>\n          )}\n\n          <Spacer />\n          <Box>\n            <Select\n              placeholder=\"Sortieren\"\n              variant={'unstyled'}\n              my=\"2\"\n              icon={<Icon as={FaSort} mb=\"1\" />}\n              onChange={e => props.onSortChange(e.target.value)}>\n              {props.sortOptions.map((option, index) => (\n                <option key={index} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </Box>\n        </Flex>\n        <Divider />\n      </Box>\n    </>\n  )\n}\n\nconst PriceRangeFilter = (props: {\n  minPrice: number\n  maxPrice: number\n  onPriceChange: (min: number, max: number) => void\n}) => {\n  const [value, setValue] = React.useState([props.minPrice, props.maxPrice])\n\n  const handlePriceChange = (value: [number, number]) => {\n    setValue(value)\n  }\n\n  return (\n    <Box>\n      <Text fontWeight={'bold'}>\n        {`Preisklasse (${value[0]} - ${value[1]}€)`}\n      </Text>\n\n      <Box px=\"4\">\n        <RangeSlider\n          min={props.minPrice}\n          max={props.maxPrice}\n          value={value}\n          onChange={handlePriceChange}\n          onChangeEnd={value => props.onPriceChange(value[0], value[1])}>\n          <RangeSliderTrack>\n            <RangeSliderFilledTrack />\n          </RangeSliderTrack>\n          <RangeSliderThumb boxSize={6} index={0} />\n          <RangeSliderThumb boxSize={6} index={1} />\n        </RangeSlider>\n      </Box>\n    </Box>\n  )\n}\n\ninterface FilterProps {\n  allTags: Array<string> // [\"category:test\",...]\n  activeTags: Array<string>\n  onActiveTagsChange: (tags: FilterProps['activeTags']) => void\n  priceFilter: React.ComponentProps<typeof PriceRangeFilter>\n}\n\nconst Filter = (props: FilterProps) => {\n  const [activeTags, setActiveTags] = React.useState(props.activeTags)\n\n  const groupedFilter = React.useMemo(() => {\n    const grouped: {\n      [group: string]: Array<string>\n    } = {}\n\n    for (const tag of Object.values(props.allTags)) {\n      const [group, tagName] = tag.split(':')\n\n      grouped[group] = grouped[group] || []\n      grouped[group].push(tagName)\n    }\n\n    return grouped\n  }, [props.allTags])\n\n  const handleActiveTabsChange = (tag: string) => {\n    let newActiveTags\n\n    if (activeTags.includes(tag)) {\n      newActiveTags = activeTags.filter(t => t !== tag)\n    } else {\n      newActiveTags = [...activeTags, tag]\n    }\n\n    setActiveTags(newActiveTags)\n\n    props.onActiveTagsChange(newActiveTags)\n  }\n\n  return (\n    <VStack px=\"2\" spacing={4} divider={<Divider />} align=\"stretch\">\n      <>\n        {Object.entries(groupedFilter).map(([tagType, values]) => (\n          <Box pb=\"2\">\n            <Text fontWeight={'bold'}>{tagType}</Text>\n            <Stack>\n              {values.map((tagName, key) => {\n                const fullTag = `${tagType}:${tagName}`\n                const isChecked = activeTags.includes(fullTag)\n\n                return (\n                  <Checkbox\n                    key={key}\n                    defaultChecked={isChecked}\n                    onChange={() => handleActiveTabsChange(fullTag)}>\n                    {tagName}\n                  </Checkbox>\n                )\n              })}\n            </Stack>\n          </Box>\n        ))}\n      </>\n      <PriceRangeFilter {...props.priceFilter} />\n    </VStack>\n  )\n}\n\nexport const ShopCatalogLayout = (props: {\n  filter: React.ComponentProps<typeof Filter>\n  products: React.ComponentProps<typeof ProductGrid>\n  header: React.ComponentProps<typeof Header>\n  onLoadMore: () => void // return true if more products are available\n  loading: boolean\n  activePath: string\n}) => {\n  const mobile = useDisclosure()\n  const [isDesktop] = useMediaQuery('(min-width: 1268px)')\n\n  const gridRef = React.useRef<HTMLDivElement>(null)\n\n  const fetchMore = React.useCallback(() => {\n    //alert(`fetch more loading ${props.loading}`)\n    props.onLoadMore()\n  }, [props.loading, props.onLoadMore()])\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (gridRef.current) {\n        const yOfDivEnd = gridRef.current.getBoundingClientRect().bottom\n\n        const currentScroll = window.pageYOffset + window.innerHeight\n\n        if (yOfDivEnd < currentScroll) {\n          fetchMore()\n        }\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  return (\n    <BaseLayout withSearch={false} activePath={props.activePath}>\n      <BannerLayout {...props.header} />\n      <ShopLayout>\n        <Header\n          {...props.header}\n          isMobile={!isDesktop}\n          onMobileFilterClick={mobile.onToggle}\n        />\n        <Flex>\n          <>\n            {!isDesktop ? (\n              <Drawer\n                isOpen={mobile.isOpen}\n                onClose={mobile.onClose}\n                placement=\"left\"\n                blockScrollOnMount={false}>\n                <DrawerContent p=\"4\">\n                  <Heading as=\"h3\" mb=\"4\">\n                    Filter\n                  </Heading>\n                  <Filter {...props.filter} />\n                </DrawerContent>\n              </Drawer>\n            ) : (\n              <Box\n                w=\"30%\"\n                position={'sticky'}\n                top=\"12\"\n                alignSelf={'flex-start'}>\n                <Filter {...props.filter} />\n              </Box>\n            )}\n          </>\n\n          <Box w=\"100%\" ref={gridRef}>\n            <ProductGrid {...props.products} />\n            <Center w=\"100%\">{props.loading && <Spinner />}</Center>\n          </Box>\n        </Flex>\n      </ShopLayout>\n    </BaseLayout>\n  )\n}\n","import {PageProps} from 'gatsby'\nimport React from 'react'\n\nimport {\n  SearchProvider,\n  useProductSearch\n} from '../../common/requests/storefront'\nimport {ShopCatalogLayout} from '../../layout/ShopCatalogLayout'\n\ntype ShopPageProps = PageProps<\n  {},\n  {\n    filter: {\n      allTags: Array<string>\n      categoryTagsAndPriorities: {\n        maxPrio: number\n        data: Array<{priority: number; tag: string}>\n      }\n      productPageTags: Array<string>\n      activeTags: Array<string>\n      initialFilters: {\n        term: string | null\n        tags: Array<string>\n        maxPrice: number\n      }\n      hasNextPage: boolean\n    }\n    header: {\n      title: string\n    }\n    products: {\n      items: Array<any>\n    }\n  }\n>\n\nconst ShopPage = ({pageContext, path}: ShopPageProps) => {\n  const [filters, setFilters] = React.useState({\n    ...pageContext.filter.initialFilters,\n    minPrice: 0,\n    initialFilters: {\n      ...pageContext.filter.initialFilters,\n      minPrice: 0\n    }\n  })\n\n  const [sortKey, setSortKey] = React.useState('TITLE')\n  const [reverse, setReverse] = React.useState(false)\n  const [allProducts, setAllProducts] = React.useState(\n    pageContext.products.items\n  )\n\n  const [initialData, setInitialData] = React.useState<any>()\n\n  const {data, isFetching, products, hasNextPage, resetCursor, fetchNextPage} =\n    useProductSearch(\n      false,\n      {\n        term: filters.term,\n        tags: filters.tags,\n        minPrice: filters.minPrice,\n        maxPrice: filters.maxPrice\n      },\n      pageContext.filter.allTags,\n      sortKey,\n      false,\n      12,\n      initialData,\n      filters.initialFilters,\n      reverse,\n      pageContext.filter.activeTags,\n      pageContext.filter.categoryTagsAndPriorities\n    )\n\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [shouldResetFilters, setShouldResetFilters] = React.useState(false)\n  const [hasMore, setHasMore] = React.useState(pageContext.filter.hasNextPage)\n\n  React.useEffect(() => {\n    setHasMore(hasNextPage)\n  }, [hasNextPage])\n\n  React.useEffect(() => {\n    setShouldResetFilters(true)\n  }, [filters])\n\n  React.useEffect(() => {\n    if (\n      JSON.stringify(products.map(p => p.handle)) !==\n      JSON.stringify(allProducts.map(p => p.handle))\n    ) {\n      if (shouldResetFilters) {\n        setAllProducts(products)\n        setShouldResetFilters(false)\n      } else {\n        // merge the new products with the old ones\n        setAllProducts(allProducts.concat(products))\n      }\n\n      setInitialData(data)\n    }\n  }, [JSON.stringify(products.map(p => p.handle)), shouldResetFilters])\n\n  React.useEffect(() => {\n    if (isLoading) {\n      if (hasMore) {\n        if (!isFetching) {\n          fetchNextPage()\n        }\n      }\n    }\n    setIsLoading(false)\n  }, [isLoading, hasMore, isFetching])\n\n  return (\n    <>\n      <ShopCatalogLayout\n        activePath={path}\n        loading={isFetching}\n        filter={{\n          ...pageContext.filter,\n          activeTags: [],\n          allTags: pageContext.filter.productPageTags,\n          onActiveTagsChange: (tags: Array<string>) => {\n            resetCursor()\n            setFilters({\n              ...filters,\n              tags: tags,\n              initialFilters: filters\n            })\n          },\n          priceFilter: {\n            minPrice: 0,\n            maxPrice: pageContext.filter.initialFilters.maxPrice,\n            onPriceChange: (min, max) => {\n              resetCursor()\n              setFilters({...filters, minPrice: min, maxPrice: max})\n            }\n          }\n        }}\n        header={{\n          title: pageContext.header.title,\n          path: path,\n          sortOptions: [\n            'Alphabetisch',\n            'Preis aufsteigend',\n            'Preis absteigend'\n          ],\n          onSortChange: (option: string) => {\n            let sortOption: string\n            switch (option) {\n              case 'Alphabetisch':\n                sortOption = 'TITLE'\n                setReverse(false)\n                break\n              case 'Preis aufsteigend':\n                sortOption = 'PRICE'\n                setReverse(false)\n                break\n              case 'Preis absteigend':\n                sortOption = 'PRICE'\n                setReverse(true)\n                break\n              default:\n                sortOption = 'TITLE'\n                setReverse(false)\n            }\n            resetCursor()\n            setShouldResetFilters(true)\n            setSortKey(sortOption)\n          }\n        }}\n        products={{\n          items: allProducts,\n          getPath: (handle: string) => {\n            // remove the trailing slash\n            const pathname = path.replace(/\\/$/, '')\n\n            return `${pathname}/${handle}`\n          }\n        }}\n        onLoadMore={() => setIsLoading(true)}\n      />\n    </>\n  )\n}\n\nconst ShopPageWithSearch = (props: ShopPageProps) => {\n  return (\n    <SearchProvider>\n      <ShopPage {...props} />\n    </SearchProvider>\n  )\n}\n\nexport default ShopPageWithSearch\n"],"names":["KEY","Symbol","for","hasWarned","getDisplayName","Comp","wrapper","name","displayName","concat","injectable","from","implementation","message","console","error","mq","map","bp","GCImage","props","gimg","className","imgClassName","alt","src","getWindowWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","useWindowWidth","React","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","gridPadBoxes","items","gridSize","filler","Box","toFill","length","Array","fill","Banner","styled","BannerLayout","position","color","S","Flex","top","w","justifyContent","alignItems","path","Heading","size","my","title","ImageBoxWithTags","image","tags","borderRadius","boxShadow","bg","useColorModeValue","overflow","G","onDragStart","e","preventDefault","draggable","gatsbyImageData","left","right","p","tag","Badge","variant","fontSize","fontWeight","rounded","px","mr","hexColor","rgb","replace","match","x","parseInt","bgColor","textTransform","Price","price","parseFloat","toFixed","discountPrice","direction","wrap","base","md","Text","textDecoration","ml","mb","ProductCardLayout","id","categoriesString","createdAt","Date","getTime","now","push","percent","getDefaultTags","VStack","css","boxSize","cursor","textAlign","isTruncated","generateProductCard","item","tagsWithoutCategory","filter","startsWith","split","join","featuredImage","contextualPricing","maxVariantPricing","amount","compareAtPrice","ProductGrid","emptyBoxes","spacing","borderBottom","SimpleGrid","minChildWidth","key","Link","as","GatsbyLink","to","getPath","handle","Header","alignSelf","zIndex","isMobile","leftIcon","FaFilter","onClick","onMobileFilterClick","_focus","Spacer","placeholder","icon","FaSort","onChange","onSortChange","target","value","sortOptions","option","index","Divider","PriceRangeFilter","minPrice","maxPrice","setValue","min","onChangeEnd","onPriceChange","Filter","activeTags","setActiveTags","groupedFilter","grouped","Object","values","allTags","group","tagName","divider","align","entries","tagType","pb","Stack","fullTag","isChecked","includes","defaultChecked","newActiveTags","t","onActiveTagsChange","priceFilter","ShopCatalogLayout","mobile","useDisclosure","isDesktop","useMediaQuery","gridRef","fetchMore","onLoadMore","loading","handleScroll","current","getBoundingClientRect","bottom","pageYOffset","innerHeight","BaseLayout","withSearch","activePath","header","ShopLayout","onToggle","isOpen","onClose","placement","blockScrollOnMount","ref","products","Center","ShopPage","pageContext","initialFilters","filters","setFilters","sortKey","setSortKey","reverse","setReverse","allProducts","setAllProducts","initialData","setInitialData","useProductSearch","term","categoryTagsAndPriorities","data","isFetching","hasNextPage","resetCursor","fetchNextPage","isLoading","setIsLoading","shouldResetFilters","setShouldResetFilters","hasMore","setHasMore","JSON","stringify","productPageTags","sortOption"],"sourceRoot":""}